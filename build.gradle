buildscript {
    repositories {
        mavenCentral()
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" } // 阿里云镜像
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply from: "mirror.gradle"
apply from: "runmanager.gradle"

version = modVersion
group = "com.xiaoxianben.lazymystical" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "lazymystical-1.12.2"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    // Other repositories can go above or below Modrinth's. We don't need priority :)
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile "com.mod-buildcraft:buildcraft:6.0.8:dev"  // adds buildcraft to the dev env
    //compile "com.googlecode.efficient-java-matrix-library:ejml:0.24" // adds ejml to the dev env

    implementation ("maven.modrinth:Rw1NrDzF:qGk4NMk6") // cucumber
    implementation "maven.modrinth:C95ReXie:tkG0KX4G" // mysticalagriculture
    implementation "maven.modrinth:pl0jGXIx:fNIXv2Jz" // mysticalagradditions

    compile "mezz.jei:jei_${project.minecraft.version}:${jei_version}:api"
    implementation "mezz.jei:jei_${project.minecraft.version}:${jei_version}"

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

sourceSets.main.resources { srcDir 'src/main/resources' }
